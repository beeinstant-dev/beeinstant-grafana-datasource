{"version":3,"sources":["../../src/datasource.js"],"names":["GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","withCredentials","headers","basicAuth","length","stackNumber","jsonData","apiKey","getGraphQuery","beeScript","options","targets","queryString","target","metric","queryParam","metricCount","beeScriptEnable","i","undefined","Object","keys","forEach","key","index","encodeURIComponent","p","end","range","to","start","from","unix","doRequest","method","then","response","status","message","title","query","replace","annotation","annotationQuery","datasource","enable","iconColor","rangeRaw","data","result","interpolated","mapToTextValue","_","map","d","text","value","isObject","datasourceRequest","filter","scopedVars","refId","hide","Promise","resolve","reject"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.headers = { 'Content-Type': 'application/json' };\n    if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n      this.headers['Authorization'] = instanceSettings.basicAuth;\n    }\n\n    this.stackNumber = instanceSettings.jsonData.stackNumber;\n    this.apiKey = instanceSettings.jsonData.apiKey;\n\n    this.getGraphQuery = \"GetGraph?\";\n    this.url = \"https://api-\" + this.stackNumber + \".beeinstant.com/\";\n\n    this.beeScript=\"\";\n  }\n\n  query(options) {\n\n    var targets = options.targets;\n    var queryString = this.url+this.getGraphQuery;\n\n    var target;\n    var metric;\n    var queryParam;\n    var metricCount = 0;\n    var beeScriptEnable = false;\n\n    var beeScript;\n\n    for (var i = 0; i < targets.length; i++) {\n      target = targets[i];\n\n      if (target[\"beeScript\"]!== undefined){\n        beeScript=target[\"beeScript\"];\n        beeScriptEnable = target[\"enable\"];\n      }\n\n    \n      metric = target[\"metric\"];\n      queryParam = target[\"query\"];\n      if (metric !== undefined || queryParam !== undefined) {\n        metricCount++;\n\n        if (metricCount != 0) {\n          queryString += \"&\";\n        }\n        \n        if (metric !== undefined){\n          queryString += \"metric\" + metricCount + \"=\";\n          Object.keys(metric).forEach((key, index) => {\n            queryString += key + \"=\" + metric[key];\n            if (index < (Object.keys(metric).length - 1)) {\n              queryString += \",\";\n            }\n          });\n        }\n\n        if (queryParam !== undefined){\n          queryString += \"search\" + metricCount + \"=\";\n          queryString += encodeURIComponent(queryParam);\n        }\n\n        Object.keys(target).forEach((p, index) => {\n          if (p == \"label\" || p == \"period\" || p == \"stat\" || p == \"axis\" || p==\"func\") {\n            queryString += \"&\" + p + metricCount + \"=\" + encodeURIComponent(target[p]);\n          }\n        });\n      }\n    }\n\n    queryString += \"&type=grafana&agg=undefined\";\n\n    if (beeScriptEnable == true && beeScript != undefined && beeScript != \"\"){\n      queryString+=\"&script=\"+encodeURIComponent(beeScript);\n    }\n\n    var end = options.range.to;\n    var start = options.range.from;\n    queryString += \"&start=\" + start.unix() + \"&end=\" + end.unix();\n    queryString += \"&api_key=\" + this.apiKey;\n\n    return this.doRequest({\n      url: queryString,\n      method: 'GET'\n    });\n  }\n\n  testDatasource() {\n\n    return this.doRequest({\n      url: this.url + 'SearchMetric?q=' + \"&api_key=\" + this.apiKey,\n      method: 'GET',\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n  annotationQuery(options) {\n    var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\n    var annotationQuery = {\n      range: options.range,\n      annotation: {\n        name: options.annotation.name,\n        datasource: options.annotation.datasource,\n        enable: options.annotation.enable,\n        iconColor: options.annotation.iconColor,\n        query: query\n      },\n      rangeRaw: options.rangeRaw\n    };\n\n    return this.doRequest({\n      url: this.url + '/annotations',\n      method: 'POST',\n      data: annotationQuery\n    }).then(result => {\n      return result.data;\n    });\n  }\n\n  metricFindQuery(query) {\n    var interpolated = {\n      target: this.templateSrv.replace(query, null, 'regex')\n    };\n\n    return this.doRequest({\n      url: this.url + '/search',\n      data: interpolated,\n      method: 'POST',\n    }).then(this.mapToTextValue);\n  }\n\n  mapToTextValue(result) {\n    return _.map(result.data, (d, i) => {\n      if (d && d.text && d.value) {\n        return { text: d.text, value: d.value };\n      } else if (_.isObject(d)) {\n        return { text: d, value: i };\n      }\n      return { text: d, value: d };\n    });\n  }\n\n  doRequest(options) {\n    options.withCredentials = this.withCredentials;\n    options.headers = this.headers;\n\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  buildQueryParameters(options) {\n    //remove placeholder targets\n    options.targets = _.filter(options.targets, target => {\n      return target.target !== 'select metric';\n    });\n\n    var targets = _.map(options.targets, target => {\n      return {\n        target: this.templateSrv.replace(target.target, options.scopedVars, 'regex'),\n        refId: target.refId,\n        hide: target.hide,\n        type: target.type || 'timeserie'\n      };\n    });\n\n    options.targets = targets;\n\n    return options;\n  }\n\n  getTagKeys(options) {\n    return new Promise((resolve, reject) => {\n      this.doRequest({\n        url: this.url + '/tag-keys',\n        method: 'POST',\n        data: options\n      }).then(result => {\n        return resolve(result.data);\n      });\n    });\n  }\n\n  getTagValues(options) {\n    return new Promise((resolve, reject) => {\n      this.doRequest({\n        url: this.url + '/tag-values',\n        method: 'POST',\n        data: options\n      }).then(result => {\n        return resolve(result.data);\n      });\n    });\n  }\n\n}\n"]}